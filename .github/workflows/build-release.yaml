name: PDF Maker build Release

on:
  push:
    branches: [ master ]

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  id-token: write

jobs:
  build-artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y xfonts-base xfonts-75dpi

      - name: Install wkhtmltopdf
        run: |
          sudo apt install wkhtmltopdf

      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: stable

      - name: Build Cmd
        run: go build -v -o pdf_maker_cmd ./cmd/pdf_maker/main.go

      - name: Build Web Service
        run: go build -v -o pdf_maker_webserver ./cmd/webserver/main.go

  release:
    needs: build-artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: stable

      - name: Semantic Release
        uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog-generator-opt: "emojis=true"

  build-image:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: tiagoncardoso
          password: ${{ secrets.GHCR_PAT }}

      - name: Get latest release tag
        id: get_tag
        run: |
          git fetch --tags
          TAG=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          if [ -z "$TAG" ] || [ "$TAG" = "null" ]; then
            echo "No release found, exiting"
            exit 1
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Found tag: $TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/tiagoncardoso/repo-sca-ultra-registry/go-pdf:${{ steps.get_tag.outputs.tag }}
            ghcr.io/tiagoncardoso/repo-sca-ultra-registry/go-pdf:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max